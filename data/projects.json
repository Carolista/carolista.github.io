[
    {
        "id": 0,
        "title": "QuickEst",
        "subtitle": "<em>Liftoff Capstone Project, LaunchCode</em></p> <p>a home renovation project estimator",
        "desc": "This browser-based app allows homeowners to define and customize a renovation project for multiple rooms and get a detailed estimate of the potential cost for each one. The project details form displays different categories and choices depending on the room type, and provides the user with updated estimates for each line item with every single change made on the form. Once finished with selections and adjustments, the user can save the estimate to revisit or modify later as desired.</p> <p>This capstone project was completed in collaboration with two other LC101 graduates at LaunchCode. While initially I was heavily involved in the overall architecture of the data, my primary contribution was designing and building the front end.",
        "tech": "Front End: HTML, CSS, Bootstrap, TypeScript, & Angular <br />Back End: Java, Gradle, Spring Boot, Hibernate, & SQL",
        "noteworthy": ["Constructed nested, indexed *ngFor loops with nuanced JS algorithms, two-way binding, and event handling to provide a robust, dynamic UX in the project details form.", "Provided custom graphic design for UI and integrated custom CSS with Bootstrap.", "Utilized a RESTful API for full stack connectivity."],
        "devices": "desktop browsers",
        "demo": { "type": "YouTube", "url": ""},
        "code": { "type": "GitHub", "url": "https://github.com/LaunchCodeLiftoffProjects/construction-estimator"},
        "images": ["construction-estimator-01.png", "construction-estimator-02.png", "construction-estimator-03.png", "construction-estimator-04.png"],
        "inProgress": false
    },
    {
        "id": 2,
        "title": "Booster Rockets",
        "subtitle": "a flashcard app for students in tech",
        "desc": "Originally inspired by my own experience as a student at LaunchCode and bolstered by my subsequent experience as a Tech Leadership Fellow and Mentor, I created this app to give students a handy way to revisit ad solidify their understanding of core concepts of the languages, tools, and frameworks they are learning. This is particularly useful when, after a few months, a student is focusing on new subjects but wants to keep previous knowledge fresh in their minds. Students can quickly make up a &quot;deck&quot; of cards with whatever combination of topics and categories they wish to include, see quick statistics on past activity and performance in all topics and categories, and archive flashcards which have been correctly answered several times.</p> <p>The app also includes an admin dashboard for managing users and flashcard content.",
        "tech": "Front End: HTML, CSS, Bootstrap, TypeScript, & Angular <br />Back End: Java, Gradle, Spring Boot, Hibernate, & SQL",
        "noteworthy": [],
        "devices": "",
        "demo": { "type": "", "url": ""},
        "code": { "type": "", "url": ""},
        "images": [],
        "inProgress": true
    },
    {
        "id": 3,
        "title": "Kaleidoscope",
        "subtitle": "relax and create colorful geometric art",
        "desc": "I created this as a little challenge for myself to further my skills in writing a dynamic app in the DOM. The user is presented with several color palettes to choose from, and can select different colors from a palette to color in hexagons within a larger hexagonal grid. Only a sliver (1/12) of the grid is accessible, which is then reflected around the entire image. I've had friends tell me that sometimes when they need to relax, they pull up this app and start creating patterns.",
        "tech": "DOM - HTML, CSS, & JavaScript",
        "noteworthy": ["Experimented with using index-based IDs for the dozens of hexagons making up the grid.", "Used event delegation for groups of listeners instead of many separate event listeners.", "Added a dark mode and light mode toggle to change the effect of the patterns in contrast.", "Added the ability to change palettes mid-design and refresh the display of the pattern with the new colors."],
        "devices": "desktop browsers",
        "demo": { "type": "Try it now!", "url": "https://carolista.github.io/LC-DOM-Kaleidoscope/"},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/LC-DOM-Kaleidoscope"},
        "images": ["kaleidoscope-01.png", "kaleidoscope-02.png", "kaleidoscope-03.png", "kaleidoscope-04.png", "kaleidoscope-05.png", "kaleidoscope-06.png"],
        "inProgress": false
    },
    {
        "id": 7,
        "title": "Dazzle Words",
        "subtitle": "turn your words into sparkling disco lights",
        "desc": "This little app started as a hard-coded birthday card for my mom in 2020, but I circled back around to it because I wanted to take the concept further. I created a full character bank with both alphanumeric and special characters, implemented a form for user input, and added multiple color schemes. There is also a dark mode and light mode. The animation with randomized rotation rates makes for a really fun effect.",
        "tech": "DOM - HTML, SCSS, & JavaScript",
        "noteworthy": ["Upgraded CSS to SCSS.", "Used keyframes to rotate between 10 colors in each scheme.", "Implemented media queries and flexbox wrapping to make app responsive for all devices.", "Added validation at certain screen widths to warn about long words not being ideal."],
        "devices": "most devices",
        "demo": { "type": "Try it now!", "url": "https://carolista.github.io/Dazzle-Words/"},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/Dazzle-Words"},
        "images": ["dazzle-words-01.png", "dazzle-words-02.png", "dazzle-words-03.png", "dazzle-words.gif"],
        "inProgress": false
    },
    {
        "id": 8,
        "title": "Portfolio Website",
        "subtitle": "this is a bit meta, hey?",
        "desc": "I wanted to build a website to showcase some of my projects and also present some of the more relevant items from my resume and recommendations pursuant to a career in tech. I chose the DOM instead of Angular so that I could get it up and running quickly on GitHub, though I took the time to learn a few new things in the process. I also decided to code everything from scratch without using Bootstrap for this particular project.",
        "tech": "DOM - HTML, CSS, & JavaScript",
        "noteworthy": ["Implemented media queries so that I could make each page responsive for any size screen.", "Learned how to code a masonry layout for the projects gallery so that I could have flexible heights on each card (but still maintain a smooth responsive functionality.", "Created a modal on the project details page for displaying the screenshots at full page size without requiring navigation away from the page.", "Experimented with background clipping and gradient text for the timeline on the index page."],
        "devices": "most devices",
        "demo": { "type": "Try it now!", "url": ""},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/carolista.github.io"},
        "images": ["portfolio-meta.png", "portfolio-01.png", "portfolio-02.png", "portfolio-03.png"],
        "inProgress": false
    },
    {
        "id": 6,
        "title": "This Week",
        "subtitle": "a simple, colorful tool to plan out the week",
        "desc": "This app was created in a single sitting as a practice exercise for LaunchCode students, to demonstrate how a simple form can be created in the DOM and generate content on the page dynamically. The user chooses the day of the week, the category, and a description of the item to put on the planner.</p> <p>As this was just a practice exercise for students to demonstrate front end technology, there is no persistent back end to save a user's information.",
        "tech": "DOM - HTML, CSS, & JavaScript",
        "noteworthy": ["Buttons toggle the form's visibility.", "Event delegation is used to detect buttons and trigger actions accordingly", "Entries are organized by day of the week on the page, and each entry receives a color-coded label representing the category."],
        "devices": "desktop browsers and tablets",
        "demo": { "type": "Try it now!", "url": "https://carolista.github.io/LC-Form-Basics/"},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/LC-Form-Basics"},
        "images": ["this-week.png"],
        "inProgress": false
    },
    {
        "id": 4,
        "title": "Lights Out!",
        "subtitle": "an animated version of the classic game",
        "desc": "I built this app to experiment with basic randomization and animation. The goal is to turn all the lights off. Each click will toggle both the light clicked and any adjacent lights. Upon success, the user finds out how many moves they made and is asked if they wish to play again.",
        "tech": "DOM - HTML, CSS, & JavaScript",
        "noteworthy": ["Each game begins with a randomized board and the tiles are given different colors.", "Implemented &quot;Glow Mode&quot; with subtle animation, each light having a variable pulse rate, with the color of the highlight matching the randomly assigned color of the light.", "Added ability to toggle &quot;Glow Mode&quot; on and off as desired mid-game."],
        "devices": "most devices",
        "demo": { "type": "Try it now!", "url": "https://carolista.github.io/LC-DOM-Lights-Out/"},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/LC-DOM-Lights-Out"},
        "images": ["lights-out-01-glow-on.png", "lights-out-02-glow-off.png", "lights-out-03-success.png"],
        "inProgress": false
    },
    {
        "id": 9,
        "title": "Chattanooga Airport Flight Status",
        "subtitle": "search for arrivals and departures",
        "desc": "I created this as a prep exercise for LaunchCode students leading up to their final graded assignment of the WebDev course. With a quick foray into Angular and TypeScript, this app allows the user to view arrival and departure boards and filter results by airline, flight number, and origin/destination city.",
        "tech": "Angular, TypeScript, CSS, and HTML",
        "noteworthy": ["Structural directives are used to generate lists and display elements conditionally.", "Attribute directives in combination with ternary expressions make it easy to include visual cues with data."],
        "devices": "desktop browsers and tablets",
        "demo": { "type": "Try it now!", "url": ""},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/A6-Prep-Chattanooga-Airport"},
        "images": ["flight-status-01.png", "flight-status-02.png"],
        "inProgress": false
    },
    {
        "id": 11,
        "title": "Pour Me Another",
        "subtitle": "find delicious drink recipes",
        "desc": "This is another project that was created as a prep exercise for LaunchCode students just before a large graded assignment was due. The purpose is to practice fetching JSON from an API and get user input through a form to return search results in the form of colorful recipe cards. The app utilizes TheCocktailDB, a public API with more than 400 drink recipes to draw from.",
        "tech": "DOM - HTML, CSS, & JavaScript",
        "noteworthy": ["The search results can be narrowed through a combination of a radio button selection, a dropdown selection, and a keyword.", "As a bonus, I included a bit of animation using CSS and keyframes."],
        "devices": "desktop browsers and tablets",
        "demo": { "type": "Try it now!", "url": "https://carolista.github.io/LC-A5-prep-3/"},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/LC-A5-prep-3"},
        "images": ["pour-me-another-01.png", "pour-me-another-02.png"],
        "inProgress": false
    },
    {
        "id": 5,
        "title": "Trivia Time",
        "subtitle": "randomized, customizable trivia quizzes",
        "desc": "Originally created as a supplemental prep exercise for LaunchCode students just before a large graded assignment was due, this was a fun way to demonstrate how to fetch JSON from an API and also write some more advanced JavaScript to enhance the dynamicity of the page for a great UX. The Open Trivia Database API contains thousands of questions. This app took me less than 24 hours from conception to completion.",
        "tech": "DOM - HTML, CSS, & JavaScript",
        "noteworthy": ["Multiple properties of the JSON returned from the Open Trivia Database API are used to generate custom dropdown menus, allowing user to choose from a wide range of categories, type of question, and difficulty when creating a trivia quiz.", "Upon submitting the form to generate a quiz, to facilitate data binding, variable id numbers are assigned to each of the questions displayed on the page and also to the choices for possible answers.", "As the user chooses their answer, immediate feedback is given as to whether it is correct or not."],
        "devices": "desktop browsers and tablets",
        "demo": { "type": "Try it now!", "url": "https://carolista.github.io/LC-A5-prep-2/"},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/LC-A5-prep-2"},
        "images": ["trivia-time-01.png", "trivia-time-02.png"],
        "inProgress": false
    },
    {
        "id": 10,
        "title": "All the Lists",
        "subtitle": "create multiple categorized lists",
        "desc": "This prep exercise for LaunchCode students is built with Angular and TypeScript. It allows a user to create, edit, and delete lists by category and check off items as they are completed.",
        "tech": "Angular, TypeScript, CSS, and HTML",
        "noteworthy": ["Structural directives are used to display one list at a time and toggle the form to add a new list."],
        "devices": "desktop browsers and tablets",
        "demo": { "type": "Try it now!", "url": ""},
        "code": { "type": "GitHub", "url": "https://github.com/Carolista/LC-A6-Prep"},
        "images": ["all-the-lists-01.png", "all-the-lists-02.png"],
        "inProgress": true
    }
]
